{"componentChunkName":"component---src-templates-blog-post-js","path":"/web-track/","webpackCompilationHash":"2f3c6da872df888e5c74","result":{"data":{"site":{"siteMetadata":{"title":"云音乐大前端专栏","author":"云音乐大前端团队","siteUrl":"https://musicfe.dev"}},"markdownRemark":{"id":"f38ac27a-392c-50c5-ba13-33c5cd652cb3","excerpt":"本文作者 杨运心 头图来自Carlos Muza on Unsplash 1、前言 开始正文前先介绍一下相关概念，熟悉的读者可以略过。 前端埋点：一种收集产品数据的方式，它的目的是上报相关行为数据，相关人员以数据为依据来分析产品在用户端的使用情况，根据分析出来的结果辅助产品优化、迭代。 BI…","html":"<p><img src=\"https://p1.music.126.net/sdgWwquduqdO4nUMSm2f4Q==/109951165005471367.jpg\"></p>\n<blockquote>\n<p>本文作者 杨运心</p>\n</blockquote>\n<blockquote>\n<p>头图来自<a href=\"https://unsplash.com/@kmuza?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\">Carlos Muza</a> on <a href=\"https://unsplash.com/\">Unsplash</a></p>\n</blockquote>\n<h2>1、前言</h2>\n<p>开始正文前先介绍一下相关概念，熟悉的读者可以略过。</p>\n<p><strong>前端埋点</strong>：一种收集产品数据的方式，它的目的是上报相关行为数据，相关人员以数据为依据来分析产品在用户端的使用情况，根据分析出来的结果辅助产品优化、迭代。</p>\n<p><strong>BI</strong>：商业智能，公司内部做数据分析相关的部门。</p>\n<h2>2、背景</h2>\n<blockquote>\n<p>在流量红利逐渐消失的现在，数据的采集、分析和精细化的运营显得更加重要，所以埋点在互联网产品中是很常见的，它可以更好的辅助我们去迭代、完善产品功能。</p>\n</blockquote>\n<p>平时我们在完成基础的业务需求之后，还需要开发完成埋点需求。所以我们追求的是简单快捷的做好埋点工作，且不会占用我们太多的精力。但是现实却不那么美好，目前我们团队在前端埋点方面存在一些痛点：</p>\n<ul>\n<li>在构造埋点字段的时候需要根据 BI 的规则，把若干个字段拼接成一个，这样费时费力还有错误的风险；</li>\n<li>一些曝光场景下的点不好打比如：分页列表、虚拟列表；他们的的曝光埋点实现较为繁琐；</li>\n<li>逻辑复用问题：特别是曝光相关的点需要在业务代码里面做额外的处理，所以逻辑复用很困难，对现有代码的侵入也很严重；</li>\n</ul>\n<p>所以我们需要一种适合我们的埋点方案解决我们目前的问题，提升我们的开发效率，不再为埋点而困扰。</p>\n<h2>3、常见前端埋点方案</h2>\n<p>我们对目前市场上几种埋点方案进行了一些调研，常规有 3 种方案：</p>\n<p><strong>手动代码埋点</strong>：用户触发某个动作后手动上报数据</p>\n<ul>\n<li>优点：是最准确的，可以满足很多定制化的需求。</li>\n<li>缺点：埋点逻辑与业务代码耦合到一起，不利于代码维护和复用。</li>\n</ul>\n<p><strong>可视化埋点</strong>：通过可视化工具配置采集节点，指定自己想要监测的元素和属性。核心是查找 dom 然后绑定事件，业界比较有名的是 <a href=\"https://mixpanel.com/\">Mixpanel</a></p>\n<ul>\n<li>优点：可以做到按需配置，又不会像全埋点那样产生大量的无用数据。</li>\n<li>缺点：比较难加载一些运行时参数；页面结构发生变化的时候，可能就需要进行部分重新配置。</li>\n</ul>\n<p><strong>无埋点</strong>：也叫“全埋点”，前端自动采集全部事件并上报埋点数据，在后端数据计算时过滤出有用数据</p>\n<ul>\n<li>优点：收集用户的所有端上行为，很全面。</li>\n<li>缺点：无效的数据很多、上报数据量大。</li>\n</ul>\n<h2>4、埋点方案</h2>\n<p>在调研完这些方案后，我认为上述方案并不完全适合我们，我们需要的方案是准确、快速埋点，同时把埋点的代码与业务逻辑解耦，并且我们的音街移动站可以相对平滑的迁移到我们新的埋点库上面来。结合我们目前的技术栈 React，以及现状和运营、产品侧的需求我们决定采用<strong>声明式的组件化埋点 + 缓冲队列</strong>方案，这里阐述一下我们的大致思路。</p>\n<ul>\n<li>为了解决埋点代码与业务逻辑耦合的问题，我们认为可以在视图层处理，埋点可以归纳为两大类，点击与曝光埋点。我们可以抽象出两个组件分别处理这两种场景。</li>\n<li>在一些场景下快速滑动、频繁点击会在短时间打出大量的点，造成频繁的接口调用，这在移动端是要避免的，针对这种场景我们引入了缓冲队列，产生的点位信息先进入队列，通过定时任务分批次上报数据，针对不同类型的点也可以应用不同的上报频率。</li>\n<li>目前对于一些字段采用的是人工拼接，比如 BI 定义的 _mspm2 等相关通用字段，类似这种我们完全可以在库统一处理，既不容易出错，也方便后期拓展。</li>\n<li>对于页面级曝光，我们可以在埋点库初始化后自动注册关于页面曝光的相关事件，不需要使用者关心。</li>\n<li>\n<p>以页面为维度管理埋点配置</p>\n<ul>\n<li>我们的站点是同构应用，跟我们的架构比较契合</li>\n<li>更加清晰，便于维护</li>\n<li>目前也是采用这种方案管理，迁移成本会更小</li>\n</ul>\n</li>\n</ul>\n<h2>5、关键节点</h2>\n<h3>5.1 流程梳理</h3>\n<p>这里存在一个问题，可能库还没初始化完毕，一些点已经产生了，比如曝光类的，如果这时候生成对应的点进入缓冲队列，就是属于无效的点因为没有加载到坑位信息、配置参数等，所以针对这种场景下产生的点位信息，我们新开一个队列存储，等到初始化完成再去处理;</p>\n<p>流程图：</p>\n<p><img src=\"https://p1.music.126.net/FRBRMaM9mHYqIE38WrHvwQ==/109951165005487881.png\" alt=\"avatar\"></p>\n<h3>5.2 点击埋点</h3>\n<p>点击埋点我们开始的思考是提供一个组件，包裹需要进行点击埋点的 <code class=\"language-text\">dom</code> 元素，也有可能是<code class=\"language-text\">组件</code>，然后给子元素绑定点击事件，当用户触发事件时进行埋点相关处理。 </p>\n<p>按照上述思路我们就必须绑定点击事件到 dom 上，但是我们又不想引入额外的 dom 元素，因为这会增加 dom 结构层级，给使用者带来麻烦，这样留给我们的操作空间就剩下 <code class=\"language-text\">props.children</code> ，所以我们去递归 <code class=\"language-text\">TrackerClick</code> 组件的 <code class=\"language-text\">children</code>，找到最外层的dom元素，同时要求 <code class=\"language-text\">TrackerClick</code> 下面必须有一个 <code class=\"language-text\">container</code> 元素，按照这个思路我们进行了处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TrackerClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">,</span>\n    extra<span class=\"token punctuation\">,</span>\n    immediate<span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// todo append queue</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">AddClickEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ele</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function-variable function\">onClick</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> originClick <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>onClick <span class=\"token operator\">||</span> noop<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">originClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">findHtmlElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ele</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> ele<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>prototype <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                ele <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ele<span class=\"token punctuation\">.</span>type</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                ele <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> ele<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">AddClickEvent</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            children<span class=\"token punctuation\">:</span> <span class=\"token function\">findHtmlElement</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token function\">findHtmlElement</span><span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// case1</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerClick</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>namespace.click<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">点击</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerClick</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">// case2</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerClick</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>namespace.click<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomerComp</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">点击</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CustomerComp</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerClick</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>从使用上来说很简便，达到了我们的目的。但是经过我们的实践也发现了一些问题，比如使用者并不清楚里面的实现细节，有可能里面没有一个  <code class=\"language-text\">container</code> 包裹，也可能使用了 <code class=\"language-text\">React.Fragment</code> 造成一些不可预估的行为、同时也无形的增加了dom结构层级（虽然我们没有引入，但是我们在告诉用户，你最好有个 <code class=\"language-text\">container</code> ）。</p>\n<p>我们又在反思这种方案的合理性，虽然使用上带来了便捷，但是带来了不确定性。经过讨论我们决定把绑定的工作交给组件使用者，我们只需要明确告诉他可以使用哪些方法，这是确定性的工作。使用方只需要把触发的回调绑定到对应的事件上即可。</p>\n<p>改造后如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerClick</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>namespace.click<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> handleClick <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">点击坑位</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerClick</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>5.3 曝光埋点</h3>\n<p>曝光对于我们来说一直是比较麻烦的，我们先来看看曝光埋点的一些要求：</p>\n<ul>\n<li>元素出现在视窗内一定的比例才算一次合法的曝光</li>\n<li>元素在视窗内停留的时长达到一定的标准才算曝光</li>\n<li>统计元素曝光时长</li>\n</ul>\n<p>站在前端的角度看实现这三点就比较复杂了，再加上一些分页、虚列表的场景就更加繁琐，带着这些问题调研了 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\">IntersectionObserver</a>。</p>\n<blockquote>\n<p>IntersectionObservers calculate how much of a target element overlaps (or \"intersects with\") the visible portion of a page, also known as the browser's \"viewport\"</p>\n</blockquote>\n<blockquote>\n<p><code class=\"language-text\">IntersectionObservers</code>计算目标元素与页面可见部分的重叠程度（或 \"相交\"），也被称为浏览器的 \"视口\"。</p>\n</blockquote>\n<p><img src=\"https://p1.music.126.net/fJoWhGjXEYXK2tPHOkvUPg==/109951165005789725.png\" alt=\"visiblitychange\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> intersectionObserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If intersectionRatio is 0, the target is out of view</span>\n  <span class=\"token comment\">// and we do not need to do anything.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>intersectionRatio <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Loaded new items'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 曝光阈值</span>\n    threshold<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// start observing</span>\nintersectionObserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.scrollerFooter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面是 MDN 的一个例子，所以我们是可以知道元素什么时候进入以及什么时候离开 viewport，间接的上面三点需求我们都可以实现。</p>\n<p>经过调研，在能力方面可以满足我们的需求、兼容性方面有对应的<a href=\"https://www.npmjs.com/package/intersection-observer\">intersection-observer polyfill</a>; 对于分页、虚列表，我们只需要关注我们需要观测的<code class=\"language-text\">列表item</code>，所以我们需要实现一个高性能的 <code class=\"language-text\">ReactObserver</code> 组件来提供 <code class=\"language-text\">intersection-observer</code> 的能力并对外提供相应的回调。如何实现一个高性能的Observer此处不做赘述。</p>\n<p>下面是曝光组件绑定 dom 的两种方式</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// case1: 直接绑定dom</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">styleName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>tracker-exposure<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>\n                arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerExposure</span></span>\n                        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>pagination.impress<span class=\"token punctuation\">'</span></span>\n                        <span class=\"token attr-name\">extra</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> modulePosition<span class=\"token punctuation\">:</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n                    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                        </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> addRef <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>addRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerExposure</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// case2: 自定义组件</span>\n<span class=\"token keyword\">const</span> Test <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        width<span class=\"token punctuation\">:</span> <span class=\"token string\">'150px'</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token punctuation\">:</span> <span class=\"token string\">'150px'</span><span class=\"token punctuation\">,</span>\n        border<span class=\"token punctuation\">:</span> <span class=\"token string\">'1px solid gray'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">TEST</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">styleName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tracker-exposure<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n            arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerExposure</span></span>\n                <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pagination.impress<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">extra</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> modulePosition<span class=\"token punctuation\">:</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> addRef <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Test</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>addRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n                <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerExposure</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用上我们仅提供一个 addRef 用以获取 dom 执行监听工作，其他工作都交给库来处理，曝光变得如此简单。针对上述3点要求，我们提供配置如下：</p>\n<ul>\n<li><strong>threshold</strong>： 曝光阈值，当 element 出现在视窗多少比例触发</li>\n<li><strong>viewingTime</strong>：元素曝光时长，用来判断是否是一次时长合规的曝光</li>\n<li><strong>once</strong>：是否重复打曝光埋点</li>\n</ul>\n<h3>5.4 运行时参数</h3>\n<p>一般固定的参数我们会放在config配置文件中管理，当然也有一些运行时的参数，比如 <code class=\"language-text\">userId，modulePosition</code> 等运行时字段，针对这种场景我们提供 <code class=\"language-text\">extra props</code> 通过组件的 <code class=\"language-text\">props</code> 传递，在组件内部拼装，使用时只需要传入对应业务字段即可。</p>\n<h3>5.5 appendQueue</h3>\n<p>一些场景下我们没法绑定事件到dom上，比如原生的元素：<code class=\"language-text\">audio、video</code>，以及封装层级很深的业务组件，类似这种只对外提供了回调，针对这种场景我们提供了 <code class=\"language-text\">appendQueue</code> 方法，把点加入到缓冲队列中。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">appendQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'module.click'</span><span class=\"token punctuation\">,</span>\n    action<span class=\"token punctuation\">:</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    extra<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        userId<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>5.6 定时任务</h3>\n<p>我们的设计是所有产生的点都会进入缓冲队列中，通过定时任务上报。目前策略是点击类上报频率 1000ms，曝光类 3000ms，当然这个间隔也不是凭空想象的，经过跟算法、BI 讨论商定出来的，兼顾了前端的需求与算法那边实时性的要求，目前这两个值也是支持配置的。</p>\n<p>关于定时任务的时间间隔，我们取点击和曝光上报频率的最大公约数，以减少执行次数。</p>\n<h3>5.7 页面曝光</h3>\n<p>我们在初始化的时候会根据配置文件中约定的字段判断是否需要处理页面曝光；</p>\n<p>页面曝光的关键是采集页面曝光的时机，浏览器的页面生命周期标准和规范才开始制定没多久，各个厂商支持的都不是很好，参考 Chrome 的页面生命周期中的 visibilitychange 事件作为采集页面曝光的时机。</p>\n<p><img src=\"https://p1.music.126.net/aqh41yijZVXLnazc0nHmbA==/109951164893411921.jpg\" alt=\"page life\"></p>\n<p><strong>visiblitychange</strong> 的浏览器兼容情况</p>\n<p><img src=\"https://p1.music.126.net/luZmKZajv1RLAyhEhIizxQ==/109951164893602993.png\" alt=\"visiblitychange\"></p>\n<h2>6、使用</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Tracker<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    TrackerExposure<span class=\"token punctuation\">,</span>\n    appendQueue\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'music/tracker'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    opus<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        mspm<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxx091781c235b0c828xxxx'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'playstart'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        mspm<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxx91981c235b0c8286xxxx'</span><span class=\"token punctuation\">,</span>\n        _resource_1_id<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        _resource_1_type<span class=\"token punctuation\">:</span> <span class=\"token string\">'school'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    viewstart<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        mspm<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxd091781c235b0c828xxx'</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'page'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    viewend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        mspm<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxx17b1b200b0c2e3xxxxxx'</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'page'</span><span class=\"token punctuation\">,</span>\n        _time<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Tracker<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    generateConfig<span class=\"token punctuation\">,</span>\n    TrackerExposure<span class=\"token punctuation\">,</span>\n    appendQueue\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Tracker<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> generateConfig<span class=\"token punctuation\">,</span> TrackerExposure<span class=\"token punctuation\">,</span> appendQueue <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./tracker.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Demo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>opusList<span class=\"token punctuation\">,</span> setOpusList<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        Tracker<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            common<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                osVer<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n                activityId<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            config<span class=\"token punctuation\">:</span> <span class=\"token function\">generateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// fetch opuslist</span>\n        <span class=\"token function\">setOpusList</span><span class=\"token punctuation\">(</span>opus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleStart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">appendQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'playstart'</span><span class=\"token punctuation\">,</span>\n            action<span class=\"token punctuation\">:</span> <span class=\"token string\">'playstart'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n            opusList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">opus</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrackerExposure</span></span> \n                    <span class=\"token attr-name\">start</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>opus<span class=\"token punctuation\">\"</span></span>\n                    <span class=\"token attr-name\">startExtra</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>opusId<span class=\"token punctuation\">:</span> opus<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n                    <span class=\"token attr-name\">threshold</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> addRef <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>addRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>opus<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TrackerExposure</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Player</span></span> <span class=\"token attr-name\">onStart</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleStart<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">;\n}</span></code></pre></div>\n<h2>7、总结</h2>\n<p>我们在音街移动站中进行了迁移、在多个运营活动中进行了使用，达到了我们预期的目标；在提效方面，埋点库把费时的部分处理了，我们需要做的就是从埋点平台把坑位信息放入配置文件，业务开发的时候使用对应的组件就可以了，几乎没有太大的成本，且对于代码复用和维护来说也达到了目的。</p>\n<p>在使用过程中发现对于点击类埋点 appendQueue 使用频率远高于 TrackerClick 组件，因为大部分元素的点击事件都有他自己的回调函数，但是我们使用 TrackerClick 的初衷是埋点代码和业务代码解耦，这个也要根据实际场景去选择。</p>\n<h2>8、参考资料</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\">MDN/IntersectionObserver</a></li>\n<li><a href=\"https://github.com/researchgate/react-intersection-observer\">react-intersection-observer</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/07/page-lifecycle-api#managing-cross-browsers-differences\">page-lifecycle</a></li>\n</ul>\n<blockquote>\n<p>本文发布自 <a href=\"https://github.com/x-orpheus\">网易云音乐大前端团队</a>，文章未经授权禁止任何形式的转载。我们常年招收前端、iOS、Android，如果你准备换工作，又恰好喜欢云音乐，那就加入我们 grp.music-fe(at)corp.netease.com！</p>\n</blockquote>","frontmatter":{"title":"前端组件化埋点的实践","date":"2020-10-30","description":"在流量红利逐渐消失的现在，数据的采集、分析和精细化的运营显得更加重要，所以埋点在互联网产品中是很常见的，它可以更好的辅助我们去迭代、完善产品功能。"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/web-track/","previous":{"fields":{"slug":"/widgetkit/"},"frontmatter":{"title":"网易云音乐 iOS 14 小组件实战手册"}},"next":{"fields":{"slug":"/javascript-functional-programming-functor/"},"frontmatter":{"title":"函数式编程进阶：应用函子"}}}}}