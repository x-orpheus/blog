{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-native-refresh/","webpackCompilationHash":"f5e57dfe25e09a92e585","result":{"data":{"site":{"siteMetadata":{"title":"云音乐大前端专栏","author":"云音乐大前端团队","siteUrl":"https://musicfe.dev"}},"markdownRemark":{"id":"5c570a28-5c1b-5a46-a072-96910c9ee0e5","excerpt":"本文作者：李磊 背景 Web 应用如果要更新列表数据，一般会选择点击左上角刷新按钮，或使用快捷键 Ctrl+F…","html":"<p><img src=\"https://p1.music.126.net/_MOHJiIt7l2Jgoe_8yybrQ==/109951165021833487.png\"></p>\n<blockquote>\n<p>本文作者：李磊</p>\n</blockquote>\n<h1>背景</h1>\n<p>Web 应用如果要更新列表数据，一般会选择点击左上角刷新按钮，或使用快捷键 Ctrl+F5，进行页面资源和数据的全量更新。如果页面提供了刷新按钮或是翻页按钮，也可以点击只做数据更新。</p>\n<p>但移动客户端屏幕寸土寸金，无论是加上一个刷新按钮，还是配合越来越少的手机按键来做刷新操作，都不是十分便捷的方案。</p>\n<p>于是，在这方寸之间，各种各样的滑动方案和手势方案来触发事件，成了移动客户端的普遍趋势。在刷新数据方面，移动端最常用的方案就是下拉刷新的机制。</p>\n<h1>什么是下拉刷新？</h1>\n<p>下拉刷新的机制最早是由 Loren Brichter 在 Tweetie 2 中实现。Tweetie 是 Twitter 的第三方客户端，后来被 Twitter 收购，Loren Brichter 也成为 Twitter 员工（现已离开）。</p>\n<p>Loren Brichter 在 2010 年 4 月 8 日为下拉刷新申请了专利，并获得授权<a href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&#x26;Sect2=HITOFF&#x26;p=1&#x26;u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&#x26;r=19&#x26;f=G&#x26;l=50&#x26;co1=AND&#x26;d=PTXT&#x26;s1=8448084&#x26;OS=8448084&#x26;RS=8448084\">United States Patent: 8448084</a>。但他很愿意看到这个机制被其他 app 采用，也曾经说过申请是防御性的。</p>\n<p><img src=\"https://p1.music.126.net/meC8U0vGNuOwj55dVcx24Q==/109951165022006158.png\"></p>\n<p>我们看下专利保护范围最大的主权项是：</p>\n<ul>\n<li>在一种布置中，显示包含内容项的滚动列表；</li>\n<li>可以接受与滚动命令相关联的输入；</li>\n<li>根据滚动命令，显示一个滚动刷新的触发器；</li>\n<li>基于滚动命令，确定滚动刷新的触发器被激活后，刷新滚动列表中的内容。</li>\n</ul>\n<p>简单来说，下拉加载的机制包含三个状态：</p>\n<ul>\n<li>“下拉更新”：展示用户下拉可扩展的操作。</li>\n<li>“松开更新”：提示用户下拉操作的临界点。</li>\n<li>“数据更新动画”：手势释放，提醒用户数据正在更新。</li>\n</ul>\n<p>在那之后，很多以 news feed 为主的移动客户端都相继采用了这个设计。</p>\n<h1>React Native 支持下拉刷新么？</h1>\n<p>React Native 提供了 <a href=\"https://reactnative.cn/docs/refreshcontrol\">RefreshControl</a> 组件，可以用在 ScrollView 或 FlatList 内部，为其添加下拉刷新的功能。</p>\n<p>RefreshControl 内部实现是分别封装了 iOS 环境下的 <code class=\"language-text\">UIRefreshControl</code> 和安卓环境下的 <code class=\"language-text\">AndroidSwipeRefreshLayout</code>，两个都是移动端的原生组件。</p>\n<p><img src=\"https://p1.music.126.net/2D7SVLFvBavEFHeEGbqwDw==/109951165022008758.png\"></p>\n<p>由于适配的原生方案不同，RefreshControl 不支持自定义，只支持一些简单的参数修改，如：刷新指示器颜色、刷新指示器下方字体。并且已有参数还受不同平台的限制。</p>\n<p><img src=\"https://p1.music.126.net/S-SL2nt4G0LcY8i8YhWBMg==/109951165022032386.png\"></p>\n<p>最常见的需求会要求下拉加载指示器有自己特色的 loading 动画，个别的需求方还会加上操作的文字说明和上次加载的时间。只支持修改颜色的 RefreshControl 肯定是无法满足的。</p>\n<p>那想要自定义下拉刷新要怎么做呢？</p>\n<h1>解决方案1</h1>\n<p><a href=\"https://reactnative.cn/docs/scrollview\">ScrollView</a> 是官方提供的一个封装了平台 ScrollView （滚动视图）的组件，常用于显示滚动区域。同时还集成了触摸的“手势响应者”系统。</p>\n<p><a href=\"https://reactnative.cn/docs/gesture-responder-system\">手势响应系统</a>用来判断用户的一次触摸操作的真实意图是什么。通常用户的一次触摸需要经过几个阶段才能判断。比如开始是点击，之后变成了滑动。随着持续时间的不同，这些操作会转化。</p>\n<p>另外，手势响应系统也可以提供给其他组件，可以使组件在不关心父组件或子组件的前提下自行处理触摸交互。<code class=\"language-text\">PanResponder</code> 类提供了一个对触摸响应系统的可预测的包装。它可以将多点触摸操作协调成一个手势。它使得一个单点触摸可以接受更多的触摸操作，也可以用于识别简单的多点触摸手势。</p>\n<p>它在原生事件外提供了一个新的 <code class=\"language-text\">gestureState</code> 对象：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onPanResponderMove</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nativeEvent<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>nativeEvent 原生事件对象包含以下字段：</p>\n<ul>\n<li>changedTouches - 在上一次事件之后，所有发生变化的触摸事件的数组集合（即上一次事件后，所有移动过的触摸点）</li>\n<li>identifier - 触摸点的 ID</li>\n<li>locationX - 触摸点相对于父元素的横坐标</li>\n<li>locationY - 触摸点相对于父元素的纵坐标</li>\n<li>pageX - 触摸点相对于根元素的横坐标</li>\n<li>pageY - 触摸点相对于根元素的纵坐标</li>\n<li>target - 触摸点所在的元素 ID</li>\n<li>timestamp - 触摸事件的时间戳，可用于移动速度的计算</li>\n<li>touches - 当前屏幕上的所有触摸点的集合</li>\n</ul>\n<p>gestureState 对象为了描绘手势操作，有如下的字段：</p>\n<ul>\n<li>stateID - 触摸状态的 ID。在屏幕上有至少一个触摸点的情况下，这个 ID 会一直有效。</li>\n<li>moveX - 最近一次移动时的屏幕横坐标</li>\n<li>moveY - 最近一次移动时的屏幕纵坐标</li>\n<li>x0 - 当响应器产生时的屏幕坐标</li>\n<li>y0 - 当响应器产生时的屏幕坐标</li>\n<li>dx - 从触摸操作开始时的累计横向路程</li>\n<li>dy - 从触摸操作开始时的累计纵向路程</li>\n<li>vx - 当前的横向移动速度</li>\n<li>vy - 当前的纵向移动速度</li>\n<li>numberActiveTouches - 当前在屏幕上的有效触摸点的数量</li>\n</ul>\n<p>可以看下 <code class=\"language-text\">PanResponder</code> 的基本用法：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">componentWillMount</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_panResponder <span class=\"token operator\">=</span> PanResponder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 要求成为响应者：</span>\n    <span class=\"token function-variable function\">onStartShouldSetPanResponder</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onStartShouldSetPanResponderCapture</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onMoveShouldSetPanResponder</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onMoveShouldSetPanResponderCapture</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderGrant</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 开始手势操作。给用户一些视觉反馈，让他们知道发生了什么事情！</span>\n      <span class=\"token comment\">// gestureState.{x,y} 现在会被设置为0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderMove</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 最近一次的移动距离为gestureState.move{X,Y}</span>\n      <span class=\"token comment\">// 从成为响应者开始时的累计手势移动距离为gestureState.d{x,y}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderTerminationRequest</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderRelease</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 用户放开了所有的触摸点，且此时视图已经成为了响应者。</span>\n      <span class=\"token comment\">// 一般来说这意味着一个手势操作已经成功完成。</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderTerminate</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 另一个组件已经成为了新的响应者，所以当前手势将被取消。</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onShouldBlockNativeResponder</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 返回一个布尔值，决定当前组件是否应该阻止原生组件成为JS响应者</span>\n      <span class=\"token comment\">// 默认返回true。目前暂时只支持android。</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">render</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>this<span class=\"token punctuation\">.</span>_panResponder<span class=\"token punctuation\">.</span>panHandlers<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>结合上面状态分析，看到 <code class=\"language-text\">onPanResponderMove</code> 和 <code class=\"language-text\">onPanResponderRelease</code> 这两个参数，基本是可以满足下拉刷新机制的操作流程的。</p>\n<p><code class=\"language-text\">onPanResponderMove</code> 处理滑动过程。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">onPanResponderMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 最近一次的移动距离为 gestureState.move{X,Y}</span>\n  <span class=\"token comment\">// 从成为响应者开始时的累计手势移动距离为 gestureState.d{x,y}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gestureState<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gestureState<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>containerTop<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>gestureState<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>containerTop<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scrollRef<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scrollRef<span class=\"token punctuation\">.</span>scrollToOffset <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// inner is FlatList</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scrollRef<span class=\"token punctuation\">.</span><span class=\"token function\">scrollToOffset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          offset<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>gestureState<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span>\n          animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scrollRef<span class=\"token punctuation\">.</span>scrollTo <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// inner is ScrollView</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scrollRef<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          y<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>gestureState<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span>\n          animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">onPanResponderRelease</code> 处理释放时的操作。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">onPanResponderRelease</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 用户放开了所有的触摸点，且此时视图已经成为了响应者。</span>\n  <span class=\"token comment\">// 一般来说这意味着一个手势操作已经成功完成。</span>\n  <span class=\"token comment\">// 判断是否达到了触发刷新的条件</span>\n  <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshTriggerHeight <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>headerHeight<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>containerTranslateY <span class=\"token operator\">>=</span> threshold<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 触发刷新</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 没到刷新的位置，回退到顶部</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resetContainerPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 检查 scrollEnabled 开关</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_checkScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>剩下的就是如何区分容器的滑动，和下拉刷新的触发。</p>\n<p>当 ScrollView 的 <code class=\"language-text\">scrollEnabled</code> 属性设置为 false 时，可以禁止用户滚动。因此，可以将 ScrollView 作为内容容器。当滚动到容器顶部的时候，关闭 ScrollView 的 <code class=\"language-text\">scrollEnabled</code> 属性，通过设置 Animated.View 的 <code class=\"language-text\">translateY</code>，显示自定义加载器。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Animated<span class=\"token punctuation\">.</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> translateY<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>containerTop <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Animated<span class=\"token punctuation\">.</span>View<span class=\"token operator\">></span></code></pre></div>\n<p><a href=\"https://snack.expo.io/@jarry/pulltorefresh1\">expo pulltorefresh1</a></p>\n<p>经过试用，发现这个方案有以下几个致命性问题：</p>\n<ol>\n<li>由于下拉过程是通过触摸响应系统经前端反馈给原生视图的，大量的数据通讯和页面重绘会导致页面的卡顿，在页面数据量较大时会更加明显；</li>\n<li>上滑和下拉的切换时通过 ScrollView 的 Enable 的属性控制的，这样会造成手势操作的中断；</li>\n<li>手势滑动过程缺少阻尼函数，表现得不如原生下拉刷新自然；\n另外还有 ScrollView 的滑动和模拟的下拉过程滑动配合不够默契的问题。</li>\n</ol>\n<h1>解决方案2</h1>\n<p>ScrollView 在 iOS 设备下有个特性，如果内容范围比滚动视图本身大，在到达内容末尾的时候，可以弹性地拉动一截。可以将加载指示器放在页面的上边缘，弹性滚动时露出。这样既不需要利用到手势影响渲染速度，又可以将滚动和下拉过程很好的融合。</p>\n<p>因此，只要处理好滚动操作的各阶段事件就好。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// console.log('onScroll()');</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>nativeEvent<span class=\"token punctuation\">.</span>contentOffset\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_offsetY <span class=\"token operator\">=</span> y\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dragFlag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_isRefreshing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshViewHeight\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span>height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          refreshStatus<span class=\"token punctuation\">:</span> RefreshStatus<span class=\"token punctuation\">.</span>releaseToRefresh<span class=\"token punctuation\">,</span>\n          refreshTitle<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshableTitleRelease\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          refreshStatus<span class=\"token punctuation\">:</span> RefreshStatus<span class=\"token punctuation\">.</span>pullToRefresh<span class=\"token punctuation\">,</span>\n          refreshTitle<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshableTitlePull\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>onScroll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onScroll</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function-variable function\">onScrollBeginDrag</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// console.log('onScrollBeginDrag()');</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dragFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_offsetY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>nativeEvent<span class=\"token punctuation\">.</span>contentOffset<span class=\"token punctuation\">.</span>y\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>onScrollBeginDrag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onScrollBeginDrag</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function-variable function\">onScrollEndDrag</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// console.log('onScrollEndDrag()',  y);</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dragFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>nativeEvent<span class=\"token punctuation\">.</span>contentOffset\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_offsetY <span class=\"token operator\">=</span> y\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshViewHeight\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_isRefreshing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>refreshStatus <span class=\"token operator\">===</span> RefreshStatus<span class=\"token punctuation\">.</span>releaseToRefresh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_isRefreshing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        refreshStatus<span class=\"token punctuation\">:</span> RefreshStatus<span class=\"token punctuation\">.</span>refreshing<span class=\"token punctuation\">,</span>\n        refreshTitle<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>refreshableTitleRefreshing\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scrollview<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span> animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scrollview<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span> animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>onScrollEndDrag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onScrollEndDrag</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>唯一美中不足的就是，iOS 支持超过内容的滑动，安卓不支持，需要单独适配下安卓。</p>\n<p>将加载指示器放在页面内，通过 <code class=\"language-text\">scrollTo</code> 方法控制页面距顶部距离，来模拟下拉空间。（iOS 和安卓方案已在 expo pulltorefresh2 给出）</p>\n<p><a href=\"https://snack.expo.io/@jarry/pulltorefresh2\">expo pulltorefresh2</a></p>\n<p>（demo 建议在移动设备查看，Web 端适配可尝试将 <code class=\"language-text\">onScrollBeginDrag onScrollEndDrag</code> 更换为 <code class=\"language-text\">onTouchStart onTouchEnd</code>）</p>\n<h1>总结</h1>\n<p>本文主要介绍了在 React Native 开发过程中，下拉刷新组件的技术调研和实现过程。 Expo demo 包含了两个方案的主要实现逻辑，读者可根据自身业务需求做定制，有问题欢迎沟通。</p>\n<h1>参考链接</h1>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/20138829\">下拉刷新是哪个设计师想出来的？</a></li>\n<li><a href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&#x26;Sect2=HITOFF&#x26;p=1&#x26;u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&#x26;r=19&#x26;f=G&#x26;l=50&#x26;co1=AND&#x26;d=PTXT&#x26;s1=8448084&#x26;OS=8448084&#x26;RS=8448084\">United States Patent: 8448084</a></li>\n<li><a href=\"https://www.zhihu.com/question/20315481\">「下拉刷新」被申请专利保护之后，为什么还有如此多的应用使用它？</a></li>\n<li><a href=\"https://reactnative.cn/docs/refreshcontrol/\">React Native 中文网/RefreshControl</a></li>\n<li><a href=\"https://github.com/facebook/react-native/blob/884c86ae02b0be7ea1e4b258dab39f4c5aee0b9d/Libraries/Components/RefreshControl/RefreshControl.js\">GitHub facebook/React Native/RefreshControl</a></li>\n<li><a href=\"https://juejin.im/post/5d2acdb6e51d4510a7328157\">React Native 自定义下拉刷新组件</a></li>\n<li><a href=\"https://reactnative.cn/docs/panresponder/\">React Native 中文网/panresponder</a></li>\n<li><a href=\"https://github.com/gameboyVito/react-native-ultimate-listview\">react-native-ultimate-listview</a></li>\n</ul>\n<blockquote>\n<p>本文发布自 <a href=\"https://github.com/x-orpheus\">网易云音乐大前端团队</a>，可自由转载，转载请在标题标明转载并在显著位置保留出处。我们一直在招人，如果你恰好准备换工作，又恰好喜欢云音乐，那就 <a href=\"mailto:grp.music-fe@corp.netease.com\">加入我们</a>！</p>\n</blockquote>","frontmatter":{"title":"React Native 实现自定义下拉刷新组件","date":"2020-07-21","description":"Web 应用如果要更新列表数据，一般会选择点击左上角刷新按钮，或使用快捷键 Ctrl+F5，进行页面资源和数据的全量更新。如果页面提供了刷新按钮或是翻页按钮，也可以点击只做数据更新。但移动客户端屏幕寸土寸金，无论是加上一个刷新按钮，还是配合越来越少的手机按键来做刷新操作，都不是十分便捷的方案。"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-native-refresh/","previous":{"fields":{"slug":"/wasm-rust/"},"frontmatter":{"title":"实现一个简单的基于 WebAssembly 的图片处理应用"}},"next":{"fields":{"slug":"/apng/"},"frontmatter":{"title":"Web 端 APNG 播放实现原理"}}}}}