{"componentChunkName":"component---src-templates-blog-post-js","path":"/qiankun-cms/","webpackCompilationHash":"3a736f73a33d1a51e4ed","result":{"data":{"site":{"siteMetadata":{"title":"云音乐大前端专栏","author":"云音乐大前端团队","siteUrl":"https://musicfe.dev"}},"markdownRemark":{"id":"7490e7eb-0c44-55b1-99cf-fed056750ed6","excerpt":"图片来源：https://zhuanlan.zhihu.com/p/78362028 本文作者：史志鹏 前言 LOOK 直播运营后台工程是一个迭代了 2+ 年，累计超过 10+ 位开发者参与业务开发，页面数量多达 25…","html":"<p><img src=\"https://p1.music.126.net/80vHXvHJqsaw-d24IyykHw==/109951165072039331.jpg\"></p>\n<blockquote>\n<p>图片来源：<a href=\"https://zhuanlan.zhihu.com/p/78362028\">https://zhuanlan.zhihu.com/p/78362028</a></p>\n</blockquote>\n<blockquote>\n<p>本文作者：史志鹏</p>\n</blockquote>\n<h2>前言</h2>\n<p>LOOK 直播运营后台工程是一个迭代了 2+ 年，累计超过 10+ 位开发者参与业务开发，页面数量多达 250+ 的“巨石应用”。代码量的庞大，带来了构建、部署的低效，此外该工程依赖内部的一套 <a href=\"http://regularjs.github.io/\">Regularjs</a> 技术栈也已经完成了历史使命，相应的 UI 组件库、工程脚手架也被推荐停止使用，走向了少维护或者不维护的阶段。因此， LOOK 直播运营后台基于 React 新建工程、做工程拆分被提上了工作日程。一句话描述目标就是：新的页面将在基于 React 的新工程开发， React 工程可以独立部署，而 LOOK 直播运营后台对外输出的访问地址期望维持不变。  </p>\n<p>本文基于 LOOK 直播运营后台的微前端落地实践总结而成。主要介绍在既有“巨石应用”、 Regularjs 和 React 技术栈共存的场景下，使用微前端框架 qiankun ，实现CMS应用的微前端落地历程。</p>\n<p>关于 qiankun 的介绍，请移步至<a href=\"https://qiankun.umijs.org/\">官方</a>查阅，本文不会侧重于介绍有关微前端的概念。</p>\n<h2>一.背景</h2>\n<h3>1.1 现状</h3>\n<ol>\n<li>如上所述，存在一个如下图所示的 CMS 应用，这个应用的工程我们称之为 liveadmin ，访问地址为：<code class=\"language-text\">https://example.com/liveadmin</code>，访问如下图所示。</li>\n</ol>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4133978389/58ea/dc2a/aa18/267d023e7d15f18af1a6bdc4018b4e39.png\"></p>\n<ol start=\"2\">\n<li>我们希望不再在 liveadmin 旧工程新增新业务页面，因此我们基于内部的一个 React 脚手架新建了一个称为 increase 的新工程，新的业务页面都推荐使用这个工程开发，这个应用可以独立部署独立访问，访问地址为：<code class=\"language-text\">https://example.com/lookadmin</code>，访问如下图所示：</li>\n</ol>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4134262586/1ace/fc3c/8901/09e649aa1f941c98e63dfd91eff5011b.png\"></p>\n<h3>1.2 目标</h3>\n<p>我们希望使用微前端的方式，集成这两个应用的所有菜单，让用户无感知这个变化，依旧按照原有的访问方式 <code class=\"language-text\">https://example.com/liveadmin</code>，可以访问到 liveadmin 和 increase 工程的所有页面。<br>\n针对这样一个目标，我们需要解决以下两个核心问题：</p>\n<ol>\n<li>两个系统的菜单合成展示;</li>\n<li>使用原有访问地址访问两个应用的页面。  </li>\n</ol>\n<p>对于第 2 个问题，相信对 qiankun 了解的同学可以和我们一样达成共识，至于第 1 个问题，我们在实践的过程中，通过内部的一些方案得到解决。下文在实现的过程会加以描述。这里我们先给出整个项目落地的效果图：</p>\n<p><img src=\"https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4521106536/685e/4b67/8df5/6a5bce5de51d2e3943f1d77319aa31ea.png\"></p>\n<p>可以看到， increase 新工程的一级菜单被追加到了 liveadmin 工程的一级菜单后面，原始地址可以访问到两个工程的所有的菜单。</p>\n<h3>1.3 权限管理</h3>\n<p>说到 CMS，还需要说一下权限管理系统的实现，下文简称 PMS。  </p>\n<ol>\n<li>权限：目前在我们的 PMS 里定义了两种类型的权限：页面权限（决定用户是否可以看到某个页面）、功能权限（决定用户是否可以访问某个功能的 API ）。前端负责页面权限的实现，功能权限则由服务端进行管控。  </li>\n<li>权限管理：本文仅阐述页面权限的管理。首先每个前端应用都关联一个 PMS 的权限应用，比如 liveadmin 关联的是 appCode = live_backend 这个权限应用。在前端应用工程部署成功后，通过后门的方式推送前端工程的页面和页面关联的权限码数据到 PMS。风控运营在 PMS 系统中找到对应的权限应用，按照角色粒度分配页面权限，拥有该角色的用户即可访问该角色被分配的页面。  </li>\n<li>权限控制：在前端应用被访问时，最外层的模块负责请求当前用户的页面权限码列表，然后根据此权限码列表过滤出可以访问的有效菜单，并注册有效菜单的路由，最后生成一个当前用户权限下的合法菜单应用。</li>\n</ol>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4148260284/a4f3/59b5/ba78/92730fbaeade7a8a4f5bd7c3690438e4.png\"></p>\n<h2>二.实现</h2>\n<h3>2.1 lookcms 主应用</h3>\n<ol>\n<li>首先，新建一个 CMS 基础工程，定义它为主应用 lookcms，具有基本的请求权限和菜单数据、渲染菜单的功能。<br>\n入口文件执行以下请求权限和菜单数据、渲染菜单的功能。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 使用 Redux Store 处理数据</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createAppStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 检查登录状态</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">checkLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 监听异步登录状态数据</span>\n<span class=\"token keyword\">const</span> unlistener <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">unlistener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> account<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> login<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> userName <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>login<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 如果已登录，根据当前用户信息请求当前用户的权限和菜单数据</span>\n        store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAllMenusAndPrivileges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> userName <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">subScribeMenusAndPrivileges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">injectView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 未登录则渲染登录页面</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 监听异步权限和菜单数据</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subScribeMenusAndPrivileges</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> unlistener <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">unlistener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> privileges<span class=\"token punctuation\">,</span> menus<span class=\"token punctuation\">,</span> allMenus<span class=\"token punctuation\">,</span> account <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">setMenus</span><span class=\"token punctuation\">(</span>menus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置主应用的菜单，据此渲染主应用 lookcms 的菜单</span>\n        <span class=\"token function\">injectView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 挂载登录态的视图</span>\n        <span class=\"token comment\">// 启动qiankun，并将菜单、权限、用户信息等传递，用于后续传递给子应用，拦截子应用的请求</span>\n        <span class=\"token function\">startQiankun</span><span class=\"token punctuation\">(</span>allMenus<span class=\"token punctuation\">,</span> privileges<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 根据登录状态渲染页面</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">injectView</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> account<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> login <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>login<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#j-main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#j-main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>$config<span class=\"token punctuation\">.</span>rootPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/auth?redirect=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>引入 qiankun，注册 liveadmin 和 increase 这两个子应用。  </li>\n</ol>\n<p>定义好子应用，按照 qiankun 官方的文档，确定 name、entry、container 和 activeRule 字段，其中 entry 配置注意区分环境，并接收上一步的 menus， privileges等数据，基本代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 定义子应用集合</span>\n<span class=\"token keyword\">const</span> subApps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// liveadmin 旧工程</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'music-live-admin'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 取子应用的 package.json 的 name 字段</span>\n    entrys<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// entry 区分环境</span>\n        dev<span class=\"token punctuation\">:</span> <span class=\"token string\">'//localhost:3001'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// liveadmin这里定义 rootPath为 liveadminlegacy，便于将原有的 liveadmin 释放给主应用使用，以达到使用原始访问地址访问页面的目的。</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/liveadminlegacy/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        online<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/liveadminlegacy/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    pmsAppCode<span class=\"token punctuation\">:</span> <span class=\"token string\">'live_legacy_backend'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 权限处理相关</span>\n    pmsCodePrefix<span class=\"token punctuation\">:</span> <span class=\"token string\">'module_livelegacyadmin'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 权限处理相关</span>\n    defaultMenus<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'welcome'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'activity'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// increase 新工程</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'music-live-admin-react'</span><span class=\"token punctuation\">,</span>\n    entrys<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        dev<span class=\"token punctuation\">:</span> <span class=\"token string\">'//localhost:4444'</span><span class=\"token punctuation\">,</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/lookadmin/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        online<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/lookadmin/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    pmsAppCode<span class=\"token punctuation\">:</span> <span class=\"token string\">'look_backend'</span><span class=\"token punctuation\">,</span>\n    pmsCodePrefix<span class=\"token punctuation\">:</span> <span class=\"token string\">'module_lookadmin'</span><span class=\"token punctuation\">,</span>\n    defaultMenus<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 注册子应用</span>\n<span class=\"token function\">registerMicroApps</span><span class=\"token punctuation\">(</span>subApps<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    entry<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>entrys<span class=\"token punctuation\">[</span>$config<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 子应用的访问入口</span>\n    container<span class=\"token punctuation\">:</span> <span class=\"token string\">'#j-subapp'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 子应用在主应用的挂载点</span>\n    <span class=\"token function-variable function\">activeRule</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> pathname <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 定义加载当前子应用的路由匹配策略，此处是根据 pathname 和当前子应用的菜单 key 比较来做的判断</span>\n        <span class=\"token keyword\">const</span> curAppMenus <span class=\"token operator\">=</span> allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>appCode <span class=\"token operator\">===</span> app<span class=\"token punctuation\">.</span>pmsAppCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>subMenus<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> isInCurApp <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>app<span class=\"token punctuation\">.</span>defaultMenus<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>curAppMenus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">headKey</span> <span class=\"token operator\">=></span> pathname<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>$config<span class=\"token punctuation\">.</span>rootPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>headKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> isInCurApp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 传递给子应用的数据：菜单、权限、账户，可以使得子应用不再请求相关数据，当然子应用需要做好判断</span>\n    props<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> menus<span class=\"token punctuation\">:</span> allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>appCode <span class=\"token operator\">===</span> app<span class=\"token punctuation\">.</span>pmsAppCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>subMenus<span class=\"token punctuation\">,</span> privileges<span class=\"token punctuation\">,</span> account <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> prefetch<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>主应用菜单逻辑</li>\n</ol>\n<p>我们基于已有的 menus 菜单数据，使用内部的 UI 组件完成了菜单的渲染，对每一个菜单绑定了点击事件，点击后通过 pushState 的方式，变更窗口的路径。比如点击 a-b 菜单，对应的路由便是 <code class=\"language-text\">http://example.com/liveadmin/a/b</code>，qiankun 会响应路由的变化，根据定义的 activeRule 匹配到对应的的子应用，接着子应用接管路由，加载子应用对应的页面资源。详细的实现过程可以参考 qiankun 源码，基本的思想是清洗子应用入口返回的 html 中的 <code class=\"language-text\">&lt;script&gt;</code> 标签 ，fetch 模块的 Javascript 资源，然后通过 eval 执行对应的 Javascript。</p>\n<h3>2.2 liveadmin 子应用</h3>\n<ol>\n<li>按照 qiankun 官方文档的做法，在子应用的入口文件中导出相应的生命周期钩子函数。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 注入 Webpack publicPath, 使得主应用正确加载子应用的资源</span>\n    __webpack_public_path__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 独立访问启动逻辑</span>\n    <span class=\"token function\">bootstrapApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">bootstrap</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 启动前钩子</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 集成访问启动逻辑，接手主应用传递的数据</span>\n    <span class=\"token function\">bootstrapApp</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">unmount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 卸载子应用的钩子</span>\n    props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#j-look'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>修改 Webpack 打包配置。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token constant\">DIST_PATH</span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> <span class=\"token constant\">ROOTPATH</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    chunkFilename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    library<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-[name]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    libraryTarget<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定打包的 Javascript UMD 格式</span>\n    jsonpFunction<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">webpackJsonp_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ol start=\"3\">\n<li>处理集成访问时，隐藏子应用的头部和侧边栏元素。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> Regular<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    template<span class=\"token punctuation\">:</span> window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__\n    <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        &lt;div class=\"g-wrapper\" r-view>&lt;/div>\n    </span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        &lt;div class=\"g-bd\">\n            &lt;div class=\"g-hd mui-row\">\n                &lt;AppHead menus={headMenus}\n                    moreMenus={moreMenus}\n                    selected={selectedHeadMenuKey}\n                    open={showSideMenu}\n                    on-select={actions.selectHeadMenu($event)}\n                    on-toggle={actions.toggleSideMenu()}\n                    on-logout={actions.logoutAuth}>&lt;/AppHead>\n            &lt;/div>\n            &lt;div class=\"g-main mui-row\">\n                &lt;div class=\"g-sd mui-col-4\" r-hide={!showSideMenu}>\n                    &lt;AppSide menus={sideMenus} \n                        selected={selectedSideMenuKey}\n                        show={showSideMenu}\n                        on-select={actions.selectSideMenu($event)}>&lt;/AppSide>\n                &lt;/div>\n                &lt;div class=\"g-cnt\" r-class={cntClass}>\n                    &lt;div class=\"g-wrapper\" r-view>&lt;/div>\n                &lt;/div>\n            &lt;/div>         \n        &lt;/div>  \n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"4\">\n<li>处理集成访问时，屏蔽权限数据和登录信息的请求，改为接收主应用传递的权限和菜单数据，避免冗余的 HTTP 请求和数据设置。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 集成访问时，直接设置权限和菜单</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">setMenus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>menus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET_PRIVILEGES_SUCCESS'</span><span class=\"token punctuation\">,</span>\n        payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            privileges<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>privileges<span class=\"token punctuation\">,</span>\n            menus<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>menus\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 独立访问时，请求用户权限，菜单直接读取本地的配置</span>\n    <span class=\"token function\">MixInMenus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPrivileges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> userName<span class=\"token punctuation\">:</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 集成访问时，设置用户登录账户</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'LOGIN_STATUS_SUCCESS'</span><span class=\"token punctuation\">,</span>\n        payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            user<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">,</span>\n            loginType<span class=\"token punctuation\">:</span> <span class=\"token string\">'OPENID'</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 独立访问时，请求和设置用户登录信息</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">loginStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"5\">\n<li>处理集成访问时，路由 base 更改</li>\n</ol>\n<p>因为集成访问时要统一 rootPath 为 liveadmin，所以集成访问时注册的路由要修改成主应用的 rootPath 以及新的挂载点。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">start</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">container</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        root<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">,</span>\n        html5<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        view<span class=\"token punctuation\">:</span> container <span class=\"token operator\">?</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#j-look'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> Regular<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#j-look'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>2.3 increase 子应用</h3>\n<p>同 liveadmin 子应用做的事类似。</p>\n<ol>\n<li>导出相应的生命周期钩子。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    __webpack_public_path__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CONTAINER</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createBrowserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> basename<span class=\"token punctuation\">:</span> Config<span class=\"token punctuation\">.</span>base <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Symbol <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Router path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span><span class=\"token function\">routeChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">CONTAINER</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">bootstrap</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createBrowserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> basename<span class=\"token punctuation\">:</span> Config<span class=\"token punctuation\">.</span>qiankun<span class=\"token punctuation\">.</span>base <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Symbol <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Router path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span> history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span><span class=\"token function\">routeChildren</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token constant\">CONTAINER</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">unmount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token constant\">CONTAINER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>Webpack 打包配置。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token constant\">DIST_PATH</span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> <span class=\"token constant\">ROOTPATH</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    chunkFilename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n    library<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-[name]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    libraryTarget<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    jsonpFunction<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">webpackJsonp_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ol start=\"3\">\n<li>集成访问时，去掉头部和侧边栏。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>__POWERED_BY_QIANKUN__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// eslint-disable-line</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>BaseLayout location<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">}</span> history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span> pms<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>pms<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Fragment<span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>\n                    curMenuItem <span class=\"token operator\">&amp;&amp;</span> curMenuItem<span class=\"token punctuation\">.</span>block\n                        <span class=\"token operator\">?</span> blockPage\n                        <span class=\"token punctuation\">:</span> children\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Fragment<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>BaseLayout<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>集成访问时，屏蔽权限和登录请求，接收主应用传递的权限和菜单数据。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>login<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>redirectUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pms<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 集成访问，直接设置数据</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login/success'</span><span class=\"token punctuation\">,</span> pms<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login/setPrivileges'</span><span class=\"token punctuation\">,</span> pms<span class=\"token punctuation\">.</span>privileges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 独立访问，请求数据</span>\n        loginAction<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function-variable function\">next</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>redirectUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">error</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">301</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        redirectUrl<span class=\"token punctuation\">,</span>\n                        host\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"5\">\n<li>集成访问时，更改 react-router base。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createBrowserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> basename<span class=\"token punctuation\">:</span> Config<span class=\"token punctuation\">.</span>qiankun<span class=\"token punctuation\">.</span>base <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Symbol <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Router path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span> history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span><span class=\"token function\">routeChildren</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        props<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token constant\">CONTAINER</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>2.4 权限集成（可选步骤）</h3>\n<ol>\n<li>上文提到，一个前端应用关联一个 PMS 权限应用，那么如果通过微前端的方式组合了每个前端应用，而每个前端子应用如果还依然对应自己的 PMS 权限应用的权限，那么站在权限管理人员的角度而言，就需要关注多个 PMS 权限应用，进行分配权限、管理角色，操作起来都很麻烦，比如两个子应用的页面区分，两个子应用同一权限的角色管理等。因此，需要考虑将子应用对应的 PMS 权限应用也统一起来，这里仅描述我们的处理方式，仅供参考。</li>\n<li>\n<p>要尽量维持原有的权限管理方式（权限管理人员通过前端应用后门推送页面权限码到 PMS，然后到 PMS 进行页面权限分配），则微前端场景下，权限集成需要做的事情可以描述为：</p>\n<ol>\n<li>各个子应用先推送本工程的菜单和权限码数据到到各自的 PMS 权限应用。</li>\n<li>主应用加载各子应用的菜单和权限码数据，修改每个菜单和权限码的数据为主应用对应的 PMS 权限应用数据，然后统一推送到主应用对应的 PMS 权限应用，权限管理人员可以在主应用对应的 PMS 权限应用内进行权限的统一分配管理。  </li>\n</ol>\n</li>\n<li>在我们的实践中，为了使权限管理人员依旧不感知这种拆分应用带来的变化，依旧使用原 liveadmin 应用对应的 appCode = live<em>backend PMS 权限应用进行权限分配，我们需要把 liveadmin 对应的 PMS 权限应用更改为 lookcms 主应用对应的 PMS 权限应用，而为 liveadmin 子应用新建一个 appCode = live</em>legacy<em>backend 的 PMS 权限应用，新的 increase 子应用则继续对应 appCode = look</em>backend 这个PMS 权限应用。以上两个子应用的菜单和权限码数据按照上一步描述的第 2 点各自上报给对应的 PMS 权限应用。最后 lookcms 主应用同时获取 appCode = live<em>legacy</em>backend 和  appCode = look<em>backend 这两个 PMS 权限应用的前端子应用菜单和权限码数据，修改为 appCode = live</em>backend 的 PMS 权限应用数据，推送到 PMS，整体的流程如下图所示，左边是原有的系统设计，右边是改造的系统设计。</li>\n</ol>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4149186794/3671/70a2/c6c7/12ad7ed2fc12fc73591d234e8c112b3e.png\"></p>\n<h3>2.5 部署</h3>\n<ol>\n<li>liveadmin 和 increase 各自使用云音乐的前端静态部署系统进行独立部署，主应用 lookcms 也是独立部署。</li>\n<li>处理好主应用访问子应用资源跨域的问题。在我们的实践过程中，由于都部署在同一个域下，资源打包遵循了同域规则。</li>\n</ol>\n<h3>2.6 小结</h3>\n<p>自此，我们已经完成了基于 qiankun LOOK 直播运营后台的微前端的实现，主要是新建了主工程，划分了主应用的职责，同时修改了子工程，使得子应用可以被集成到主应用被访问，也可以保持原有独立访问功能。整体的流程，可以用下图描述：</p>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4197467780/c62e/5b98/25f8/c66c4c8b4be7f1d4e294e456f511b03a.png\"></p>\n<h2>三.依赖共享</h2>\n<p>qiankun 官方并没有推荐具体的依赖共享解决方案，我们对此也进行了一些探索，结论可以总结为：对于 Regularjs，React 等 Javascript 公共库的依赖的可以通过 Webpack 的 externals 和 qiankun 加载子应用生命周期函数以及 import-html-entry 插件来解决，而对于组件等需要代码共享的场景，则可以使用 Webapck 5 的 module federation plugin 来解决。具体方案如下：</p>\n<p>3.1. 我们整理出的公共依赖分为两类</p>\n<p>3.1.1.  一类是基础库，比如 Regularjs，Regular-state，MUI，React，React Router 等期望在整个访问周期中不要重复加载的资源。</p>\n<p>3.1.2.  另一类是公共组件，比如 React 组件需要在各子应用之间互相共享，不需要进行工程间的代码拷贝。</p>\n<p>3.2. 对于以上两类依赖，我们做了一些本地的实践，因为还没有迫切的业务需求以及 Webpack 5 暂为发布稳定版（截至本文发布时，Webpack 5 已经发布了 release 版本，后续看具体的业务需求是否上线此部分 feature ），因此还没有在生产环境验证，但在这里可以分享下处理方式和结果。</p>\n<p>3.2.1.  对于第一类公共依赖，我们实现共享的期望的是：在集成访问时，主应用可以动态加载子应用强依赖的库，子应用自身不再加载，独立访问时，子应用本身又可以自主加载自身需要的依赖。这里就要处理好两个问题：a. 主应用怎么搜集和动态加载子应用的依赖 b. 子应用怎么做到集成和独立访问时对资源加载的不同表现。</p>\n<p>3.2.1.1. 第一个问题，我们需要维护一个公共依赖的定义，即在主应用中定义每个子应用所依赖的公共资源，在 qiankun 的全局微应用生命周期钩子 beforeLoad 中通过插入 <code class=\"language-text\">&lt;script&gt;</code> 标签的方式，加载当前子应用所需的 Javascript 资源，参考代码如下。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 定义子应用的公共依赖</span>\n<span class=\"token keyword\">const</span> dependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    live_backend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'regular'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'restate'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    look_backend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回依赖名称</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getDependencies</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">appName</span> <span class=\"token operator\">=></span> dependencies<span class=\"token punctuation\">[</span>appName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 构建script标签</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadScript</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'text/javascript'</span><span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 避免重复加载</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        Message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">加载失败</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">，请刷新重试</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 加载某个子应用前加载当前子应用的所需资源</span>\nbeforeLoad<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[LifeCycle] before load %c%s'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color: green;'</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getDependencies</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dependency</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">loadScript</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>origin<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>$config<span class=\"token punctuation\">.</span>rootPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dependency<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>这里还要注意通过 Webpack 来生产好相应的依赖资源，我们使用的是 copy-webpack-plugin 插件将 node_modules 下的 release 资源转换成包成可以通过独立 URL 访问的资源。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 开发</span>\nplugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'process.env'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token constant\">NODE_ENV</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>NoEmitOnErrorsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        patterns<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regularjs/dist/regular.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/regular.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regular-state/restate.pack.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/restate.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/react/umd/react.development.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/react.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/react-dom/umd/react-dom.development.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/react-dom.js'</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 生产</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    patterns<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regularjs/dist/regular.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/regular.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regular-state/restate.pack.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/restate.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/react/umd/react.production.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/react.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/react-dom/umd/react-dom.production.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/react-dom.js'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>3.2.1.2. 关于子应用集成和独立访问时，对公共依赖的二次加载问题，我们采用的方法是，首先子应用将主应用已经定义的公共依赖通过 copy-webpack-plugin 和 html-webpack-externals-plugin 这两个插件使用 external 的方式独立出来，不打包到 Webpack bundle 中，同时通过插件的配置，给 <code class=\"language-text\">&lt;script&gt;</code> 标签加上 ignore 属性，那么在 qiankun 加载这个子应用时使用，qiankun 依赖的 import-html-entry 插件分析到 <code class=\"language-text\">&lt;script&gt;</code> 标签时，会忽略加载有 ignore 属性的 <code class=\"language-text\">&lt;script&gt;</code> 标签，而独立访问时子应用本身可以正常加载这个 Javascript 资源。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        patterns<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regularjs/dist/regular.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/regular.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../node_modules/regular-state/restate.pack.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'../s/restate.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackExternalsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        externals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n            module<span class=\"token punctuation\">:</span> <span class=\"token string\">'remoteEntry'</span><span class=\"token punctuation\">,</span>\n            entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3000/remoteEntry.js'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            module<span class=\"token punctuation\">:</span> <span class=\"token string\">'regularjs'</span><span class=\"token punctuation\">,</span>\n            entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                path<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3001/regular.js'</span><span class=\"token punctuation\">,</span>\n                attributes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> ignore<span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            global<span class=\"token punctuation\">:</span> <span class=\"token string\">'Regular'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            module<span class=\"token punctuation\">:</span> <span class=\"token string\">'regular-state'</span><span class=\"token punctuation\">,</span>\n            entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                path<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3001/restate.js'</span><span class=\"token punctuation\">,</span>\n                attributes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> ignore<span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            global<span class=\"token punctuation\">:</span> <span class=\"token string\">'restate'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>3.2.2. 针对第二类共享代码的场景，我们调研了 Webpack 5 的 module federation plugin， 通过应用之间引用对方导入导出的 Webpack 编译公共资源信息，来异步加载公共代码，从而实现代码共享。</p>\n<p>3.2.2.1. 首先，我们实践所定义的场景是：lookcms 主应用同时提供基于 Regularjs 的 RButton 组件和基于 React 的 TButton 组件分别共享给 liveadmin 子应用和 increase 子应用。</p>\n<p>3.2.2.2. 对于 lookcms 主应用，我们定义 Webpack5 module federation plugin 如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// new BundleAnalyzerPlugin(),</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModuleFederationPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookcms'</span><span class=\"token punctuation\">,</span>\n            library<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookcms'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'remoteEntry.js'</span><span class=\"token punctuation\">,</span>\n            exposes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                TButton<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../client/exports/rgbtn.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                RButton<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../client/exports/rcbtn.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            shared<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'regularjs'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>定义的共享代码组件如下图所示：</p>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4157571456/cff3/fca5/2029/f0a743c6935049260ee76a56ef513342.png\"></p>\n<p>3.2.2.3. 对于 liveadmin 子应用，我们定义 Webpack5 module federation plugin 如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModuleFederationPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'liveadmin_remote'</span><span class=\"token punctuation\">,</span>\n        library<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'liveadmin_remote'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        remotes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            lookcms<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookcms'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        shared<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'regularjs'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>使用方式上，子应用首先要在 html 中插入源为 <code class=\"language-text\">http://localhost:3000/remoteEntry.js</code> 的主应用共享资源的入口，可以通过 html-webpack-externals-plugin 插入，见上文子应用的公共依赖 external 处理。  </p>\n<p>对于外部共享资源的加载，子应用都是通过 Webpack 的 import 方法异步加载而来，然后插入到虚拟 DOM 中，我们期望参考 Webapck 给出的 React 方案做 Regularjs 的实现，很遗憾的是 Regularjs 并没有相应的基础功能帮我们实现 Lazy 和 Suspense。</p>\n<p>通过一番调研，我们选择基于 Regularjs 提供的 r-component API 来条件渲染异步加载的组件。  </p>\n<p>基本的思想是定义一个 Regularjs 组件，这个 Regularjs 组件在初始化阶段从 props 中获取要加载的异步组件 name ，在构建阶段通过 Webpack import 方法加载 lookcms 共享的组件 name，并按照 props 中定义的 name 添加到 RSuspense 组件中，同时修改 RSuspense 组件 r-component 的展示逻辑，展示 name 绑定的组件。  </p>\n<p>由于 Regularjs 的语法书写受限，我们不便将上述 RSuspense 组件逻辑抽象出来，因此采用了 Babel 转换的方式，通过开发人员定义一个组件的加载模式语句，使用 Babel AST 转换为 RSuspense 组件。最后在 Regularjs 的模版中使用这个 <code class=\"language-text\">RSuspense</code> 组件即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 支持定义一个 fallback</span>\n<span class=\"token keyword\">const</span> Loading <span class=\"token operator\">=</span> Regular<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;div>Loading...{content}&lt;/div>'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Loading'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 写成一个 lazy 加载的模式语句</span>\n<span class=\"token keyword\">const</span> TButton <span class=\"token operator\">=</span> Regular<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lookcms/TButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Loading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 模版中使用 Babel AST 转换好的 RSuspense 组件</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;RSuspense origin='lookcms/TButton' fallback='Loading' /></span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>通过 Babel AST 做的语法转换如下图所示：</p>\n<p><img src=\"https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4521054999/349e/649e/0c60/38614f3d89eb0c65342671892fec87ca.png\"></p>\n<p>实际运行效果如下图所示：</p>\n<p><img src=\"https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4159789027/aa74/187e/bb1b/e86499cd6aa94727172af70116663448.png\"></p>\n<p>3.2.2.4. 对于 increase 子应用，我们定义 Webpack 5 module federation plugin 如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModuleFederationPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookadmin_remote'</span><span class=\"token punctuation\">,</span>\n        library<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookadmin_remote'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        remotes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            lookcms<span class=\"token punctuation\">:</span> <span class=\"token string\">'lookcms'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        shared<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>使用方式上，参考 Webpack 5 的官方文档即可，代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const RemoteButton = React.lazy(() =&gt; import(&#39;lookcms/RButton&#39;));\nconst Home = () =&gt; (\n    &lt;div className=&quot;m-home&quot;&gt;\n        欢迎\n        &lt;React.Suspense fallback=&quot;Loading Button&quot;&gt;\n            &lt;RemoteButton /&gt;\n        &lt;/React.Suspense&gt;\n    &lt;/div&gt;\n);</code></pre></div>\n<p>实际运行效果如下图所示：</p>\n<p><img src=\"https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4159787994/71b5/09c1/605b/73fe961f37a3ccc3f9375e973bc6ae54.png\"></p>\n<ol start=\"3\">\n<li>总结</li>\n</ol>\n<p><img src=\"https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/4158009312/6597/6e27/8fbd/4a8b2aa16cac1fb0035694f1798c2231.png\"></p>\n<h2>四.注意事项</h2>\n<ol>\n<li>跨域资源\n如果你的应用内通过其他方式实现了跨域资源的加载，请注意 qiankun 是通过 fetch 的方式加载所有子应用资源的，因此跨域的资源需要通过 CORS 实现跨域访问。</li>\n<li>子应用的 html 标签\n可能你的某个子应用的 html 标签上设置了某些属性或者附带了某些功能，要注意 qiankun 实际处理中剥离掉了子应用的 html 标签，因此如果由设置 rem 的需求，请注意使用其他方式适配。</li>\n</ol>\n<h2>五.未来</h2>\n<ol>\n<li>自动化\n子应用的接入通过平台的方式接入，当然这需要子应用遵守的规范行程。</li>\n<li>依赖共享\nWebpack 5 已经发布了其正式版本，因此对于 module federation plugin 的使用可以提上工作日程。 </li>\n</ol>\n<h2>六.总结</h2>\n<p>LOOK 直播运营后台基于实际的业务场景，使用 qiankun 进行了微前端方式的工程拆分，目前在生产环境平稳运行了近 4 个月，在实践的过程中，确实在需求确立和接入 qiankun 的实现以及部署应用几个阶段碰到了一些难点，比如开始的需求确立，我们对要实现的主菜单功能有过斟酌，在接入 qiankun 的过程中经常碰到报错，在部署的过程中也遇到内部部署系统的抉择和阻碍，好在同事们给力，项目能顺利的上线和运行。</p>\n<h2>参考资料</h2>\n<ul>\n<li><a href=\"https://qiankun.umijs.org/\">qiankun</a></li>\n<li><a href=\"http://regularjs.github.io/\">Regularjs</a></li>\n<li><a href=\"https://webpack.js.org/concepts/module-federation/\">Module Federation Plugin</a></li>\n</ul>\n<blockquote>\n<p>本文发布自 <a href=\"https://github.com/x-orpheus\">网易云音乐大前端团队</a>，文章未经授权禁止任何形式的转载。我们常年招收前端、iOS、Android，如果你准备换工作，又恰好喜欢云音乐，那就加入我们 grp.music-fe(at)corp.netease.com！</p>\n</blockquote>","frontmatter":{"title":"基于 qiankun 的 CMS 应用微前端实践","date":"2020-10-22","description":"本文主要介绍 LOOK 直播运营后台基于 qiankun 的微前端落地实践，以及共享公共依赖的预研工作。"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/qiankun-cms/","previous":{"fields":{"slug":"/eventloop/"},"frontmatter":{"title":"聊聊 JavaScript 的并发、异步和事件循环"}},"next":{"fields":{"slug":"/widgetkit/"},"frontmatter":{"title":"网易云音乐 iOS 14 小组件实战手册"}}}}}